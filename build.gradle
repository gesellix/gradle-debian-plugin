apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.github.ben-manes.versions'

sourceCompatibility = 1.7
targetCompatibility = 1.7

version = '16'
group = 'de.gesellix'
archivesBaseName = 'gradle-debian-plugin'

buildscript {
  repositories {
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.11.3'
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.3.1'
  }
}
apply plugin: 'com.jfrog.bintray'

repositories {
  mavenCentral()
}

configurations.all {
  resolutionStrategy {
    failOnVersionConflict()

    def dependencyVersions = [
        'junit:junit'                           : '4.11',
        'org.apache.maven:maven-core'           : '3.0.4',
        'org.apache.maven:maven-plugin-api'     : '3.0.4',
        'org.codehaus.groovy:groovy-all'        : '2.4.7',
        'org.codehaus.plexus:plexus-classworlds': '2.5.2',
        'org.codehaus.plexus:plexus-utils'      : '3.0.20',
        'xerces:xmlParserAPIs'                  : '2.6.2',
        'xerces:xercesImpl'                     : '2.6.2',
        'xml-apis:xml-apis'                     : '2.0.2'
    ]

    force dependencyVersions.collect { k, v -> "$k:$v" }
  }
}

dependencies {
  compile gradleApi()
  compile localGroovy()

  compile 'org.vafer:jdeb:1.4'
  compile 'commons-lang:commons-lang:2.6'

  testCompile 'org.spockframework:spock-core:1.2-groovy-2.4'
  testCompile 'cglib:cglib-nodep:2.2.2'
}

task testng(type: Test) {
  useTestNG()
}
check.dependsOn testng

/*task testReport(type:TestReport) {
  reportOn test, testng
}*/

uploadArchives {
  repositories {
    mavenDeployer {
      repository(url: 'file:./lib')
    }
  }
}

publishing {
  publications {
    plugin(MavenPublication) {
      from components.java  // jar
    }
  }
}

ext.dry = false
bintray {
  user = System.env.BINTRAY_USER ?: project["bintray.user"]
  key = System.env.BINTRAY_API_KEY ?: project["bintray.key"]
  publications = ['plugin']
  pkg {
    repo = 'gradle-plugins'
    //userOrg = 'myorg' // an optional organization name when the repo belongs to one of the user's orgs
    name = 'gradle-debian-plugin'
    desc = 'create debian packages with gradle'
    licenses = ['Apache-2.0']
    labels = []
  }
  dryRun = dry
}
bintrayUpload.dependsOn(":build")

task wrapper(type: Wrapper) {
  gradleVersion = '3.0'
  distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}
